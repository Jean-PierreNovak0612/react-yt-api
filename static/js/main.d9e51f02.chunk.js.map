{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/StartingPage.js","components/VideoDetail.js","components/VideoList.js","components/DisplayVideo.js","api/youtubeApi.js","hooks/useVideos.js","components/App.js","index.js"],"names":["SearchBar","label","onFormSubmit","clearSelectedVideo","useState","term","setTerm","className","onSubmit","event","preventDefault","value","type","onChange","target","VideoItem","video","onVideoSelect","setClass","onClick","alt","snippet","title","src","thumbnails","medium","url","StartingPage","videos","window","innerWidth","isMobile","setIsMobile","useEffect","addEventListener","removeEventListener","itemWidth","map","id","videoId","VideoDetail","videoSrc","description","VideoList","renderListOfVideos","DisplayVideo","selectedVideo","videoDetailWidth","videoListWidth","axios","create","baseURL","params","part","maxResults","key","useVideos","defaultSearchTerm","setVideos","search","a","youtube","q","response","data","items","App","setSelectedVideo","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d9e51f02.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ label, onFormSubmit, clearSelectedVideo }) => {\r\n\r\n    const [term, setTerm] = useState('');\r\n\r\n    const onChange = (event) => {\r\n\r\n        setTerm(event.target.value);\r\n\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        onFormSubmit(term);\r\n\r\n        clearSelectedVideo(null);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui segment search-bar\">\r\n            <form onSubmit={onSubmit} className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>{label}</label>\r\n                    <input value={term} type=\"text\" onChange={onChange} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect, setClass = '' }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(video)} className={`item ${setClass}`}>\r\n            <img alt={video.snippet.title} src={video.snippet.thumbnails.medium.url} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    {video.snippet.title}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoItem;","import React, { useEffect, useState } from 'react';\r\n\r\nimport VideoItem from './VideoItem';\r\n\r\nimport '../css/StartingPageVideoList.css';\r\n\r\nconst StartingPage = ({ onVideoSelect, videos }) => {\r\n\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 700);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setIsMobile(window.innerWidth <= 700);\r\n        }, false);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', () => {\r\n                setIsMobile(window.innerWidth <= 700);\r\n            }, false);\r\n        }\r\n    }, [])\r\n\r\n    const itemWidth = isMobile ? 'sixteen' : 'three';\r\n\r\n    const renderVideoList = () => {\r\n        \r\n        return (\r\n            videos.map(video => {\r\n                return (\r\n                    <div key ={video.id.videoId} className={`${itemWidth} wide column starting-page`}>\r\n                        <VideoItem setClass=\"videos\" onVideoSelect={onVideoSelect} video={video} />)\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui grid\">\r\n            <div className=\"ui row\">\r\n                {renderVideoList()}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StartingPage;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) =>{\r\n    if(!video){\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe src={videoSrc} title=\"video player\" />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n                <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\n\r\nimport VideoItem from './VideoItem';\r\n\r\nimport '../css/VideoItem.css';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n\r\n    const renderListOfVideos = videos.map(video => <VideoItem setClass=\"video-item\" key ={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />)\r\n\r\n    return (\r\n        <div className=\"ui relaxed divided list\">\r\n            {renderListOfVideos}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default VideoList;","import React, { useState, useEffect } from 'react';\r\n\r\nimport VideoDetail from './VideoDetail';\r\nimport VideoList from './VideoList';\r\n\r\nconst DisplayVideo = ({ selectedVideo, onVideoSelect, videos }) => {\r\n\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 700);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            setIsMobile(window.innerWidth <= 700);\r\n        }, false);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', () => {\r\n                setIsMobile(window.innerWidth <= 700);\r\n            }, false);\r\n        }\r\n    }, [])\r\n\r\n    const videoDetailWidth = isMobile ? 'sixteen' : 'eleven';\r\n    const videoListWidth = isMobile ? 'sixteen spaces' : 'five';\r\n\r\n    return (\r\n        <div className=\"ui grid\">\r\n            <div className=\"ui row\">\r\n                <div className={`${videoDetailWidth} wide column`}>\r\n                    <VideoDetail video={selectedVideo} />\r\n                </div>\r\n                <div className={`${videoListWidth} wide column`}>\r\n                    <VideoList onVideoSelect={onVideoSelect} videos={videos} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayVideo;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyCNvQsJ2A-8Pc2VGMYl6IL5RpnvZhJJ_78';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 10,\r\n        key: KEY\r\n    }\r\n})","import { useEffect, useState } from 'react';\r\n\r\nimport youtube from '../api/youtubeApi';\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n\r\n    \r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        search(defaultSearchTerm);\r\n    }, [defaultSearchTerm]);\r\n\r\n    const search = async (term) => {\r\n        const response = await youtube('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        setVideos(response.data.items);\r\n\r\n    };\r\n\r\n    return [videos, search];\r\n\r\n}\r\n\r\nexport default useVideos;","import React, { useState } from 'react';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport StartingPage from './StartingPage';\r\nimport DisplayVideo from './DisplayVideo';\r\nimport useVideos from '../hooks/useVideos';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst App = () => {\r\n\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    \r\n    const [videos, search] = useVideos('react');\r\n    \r\n    return(\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={search} label=\"Video search\" clearSelectedVideo={setSelectedVideo} />\r\n            {\r\n                !selectedVideo ? \r\n                <StartingPage onVideoSelect={setSelectedVideo} videos={videos} /> :\r\n                <DisplayVideo selectedVideo={selectedVideo} onVideoSelect={setSelectedVideo} videos={videos} />\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}