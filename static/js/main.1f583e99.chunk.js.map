{"version":3,"sources":["components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","api/youtubeApi.js","hooks/useVideos.js","components/App.js","index.js"],"names":["SearchBar","label","useState","term","setTerm","className","onSubmit","event","preventDefault","value","type","onChange","target","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderListOfVideos","map","id","videoId","VideoDetail","videoSrc","description","axios","create","baseURL","params","part","maxResults","key","useVideos","defaultSearchTerm","setVideos","useEffect","search","a","youtube","q","response","data","items","App","selectedVideo","setSelectedVideo","onFormSubmit","ReactDOM","render","document","querySelector"],"mappings":"oKA8BeA,EA5BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OACI,qBAAKC,UAAU,wBAAf,SACI,sBAAMC,SARG,SAACC,GAEdA,EAAMC,kBAMwBH,UAAU,UAApC,SACI,sBAAKA,UAAU,QAAf,UACI,gCAAQJ,IACR,uBAAOQ,MAAON,EAAMO,KAAK,OAAOC,SAjB/B,SAACJ,GAEdH,EAAQG,EAAMK,OAAOH,kBCOdI,EAbG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQT,UAAU,kBAApD,UACI,qBAAKY,IAAKH,EAAMI,QAAQC,MAAOC,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MACpE,qBAAKlB,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACKS,EAAMI,QAAQC,cCQpBK,EAZG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cAEnBW,EAAqBD,EAAOE,KAAI,SAAAb,GAAK,OAAI,cAAC,EAAD,CAAmCC,cAAeA,EAAeD,MAAOA,GAAvDA,EAAMc,GAAGC,YAEzE,OACI,qBAAKxB,UAAU,0BAAf,SACKqB,KCYEI,EApBK,SAAC,GAAc,IAAZhB,EAAW,EAAXA,MACnB,IAAIA,EACA,OAAO,6CAGX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACI,gCACI,qBAAKxB,UAAU,WAAf,SACI,wBAAQe,IAAKW,EAAUZ,MAAM,mBAEjC,sBAAKd,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BS,EAAMI,QAAQC,QACzC,4BAAIL,EAAMI,QAAQc,qB,gCCZnBC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACN3B,KAAM,QACN4B,WAAY,GACZC,IARI,6CCyBGC,EAvBG,SAACC,GAEf,MAA4BvC,mBAAS,IAArC,mBAAOuB,EAAP,KAAeiB,EAAf,KAEAC,qBAAU,WACNC,EAAOH,KACR,CAACA,IAEJ,IAAMG,EAAM,uCAAG,WAAOzC,GAAP,eAAA0C,EAAA,sEACYC,EAAQ,UAAW,CACtCV,OAAQ,CACJW,EAAG5C,KAHA,OACL6C,EADK,OAOXN,EAAUM,EAASC,KAAKC,OAPb,2CAAH,sDAWZ,MAAO,CAACzB,EAAQmB,ICcLO,G,MA5BH,WAGR,MAA0CjD,mBAAS,MAAnD,mBAAOkD,EAAP,KAAsBC,EAAtB,KACA,EAAyBb,EAAU,SAAnC,mBAAOf,EAAP,KAAemB,EAAf,KAMA,OAJAD,qBAAU,WACNU,EAAiB5B,EAAO,MACzB,CAACA,IAGA,sBAAKpB,UAAU,eAAf,UACI,cAAC,EAAD,CAAWiD,aAAcV,IACzB,qBAAKvC,UAAU,UAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAaS,MAAOsC,MAExB,qBAAK/C,UAAU,mBAAf,SACI,cAAC,EAAD,CAAWU,cAAesC,EAAkB5B,OAAQA,gBCvB5E8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.1f583e99.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ label }) => {\r\n\r\n    const [term, setTerm] = useState('');\r\n\r\n    const onChange = (event) => {\r\n\r\n        setTerm(event.target.value)\r\n\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"ui segment search-bar\">\r\n            <form onSubmit={onSubmit} className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>{label}</label>\r\n                    <input value={term} type=\"text\" onChange={onChange} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(video)} className=\"item video-item\">\r\n            <img alt={video.snippet.title} src={video.snippet.thumbnails.medium.url} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    {video.snippet.title}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\n\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n\r\n    const renderListOfVideos = videos.map(video => <VideoItem key ={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />)\r\n\r\n    return (\r\n        <div className=\"ui relaxed divided list\">\r\n            {renderListOfVideos}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) =>{\r\n    if(!video){\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe src={videoSrc} title=\"video player\" />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n                <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default VideoDetail;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyAdEnq3kGi3ZAsqUPAEZi1_T-XxatVyz5U';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 10,\r\n        key: KEY\r\n    }\r\n})","import { useEffect, useState } from 'react';\r\n\r\nimport youtube from '../api/youtubeApi';\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n    \r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        search(defaultSearchTerm);\r\n    }, [defaultSearchTerm]);\r\n\r\n    const search = async (term) => {\r\n        const response = await youtube('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        setVideos(response.data.items);\r\n\r\n    };\r\n\r\n    return [videos, search];\r\n\r\n}\r\n\r\nexport default useVideos;","import React, { useState, useEffect } from 'react';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport useVideos from '../hooks/useVideos';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst App = () => {\r\n\r\n    \r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [videos, search] = useVideos('react');\r\n\r\n    useEffect(() => {\r\n        setSelectedVideo(videos[0]);\r\n    }, [videos])\r\n    \r\n    return(\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={search} />\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={selectedVideo} />\r\n                    </div>\r\n                    <div className=\"five wide column\">\r\n                        <VideoList onVideoSelect={setSelectedVideo} videos={videos} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}